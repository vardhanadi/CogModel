View(tableOfDriftValuesCalibration)
drift_value <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime>15000 && tableOfDriftValuesCalibration$trialTime<=18000)
View(drift_value)
drift_value <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 && tableOfDriftValuesCalibration$trialTime < 18000)
View(drift_value)
drift_value_f <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000)
View(drift_value_f)
drift_value_f <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
View(drift_value_t)
View(drift_value_f)
?plot
x <- mean (dial_aggregated2$`time_dial_focus$timeRelativeToTrialStart`) #timemean of time Dial FOcusx'
?plot
x <- drift_value_t$trialTime
y <- drift_value_t$posX
smoothScatter(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)")
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)")
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)", col = unique(colors()))
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)", type= "l", col = unique(colors()))
?plot
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = unique(colors()))
library(graphics)
library((RColorBrewer::))
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "p", col = unique(colors()))
library(graphics)
library((RColorBrewer::))
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "h", col = unique(colors()))
library(graphics)
library((RColorBrewer::))
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = unique(colors()))
library(graphics)
library((RColorBrewer::))
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = unique(colors()))
library(graphics)
library((RColorBrewer::))
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",)
library(graphics)
library((RColorBrewer::))
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l",)
library(graphics)
library((RColorBrewer::))
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",)
library(graphics)
library(RColorBrewer)
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",)
library(graphics)
library(RColorBrewer)
#Question 2
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",)
m <-mean(y)
m <-mean(x)
?plot
?rnorm
rnorm(50,mean = 0,sd = 0.13)
rnorm(20,mean = 0,sd = 0.13)
plot(x,y, mean(),xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",rnorm(20,mean = 0,sd = 0.13)) #the plot between Lateral Position(m) and TrialTime(ms)
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",rnorm(20,mean = 0,sd = 0.13)) #the plot between Lateral Position(m) and TrialTime(ms)
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",rnorm(20,mean = 0,sd = 0.13)) #the plot between Lateral Position(m) and TrialTime(ms)
#Question 2
library(graphics)
library(RColorBrewer)
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",rnorm(20,mean = 0,sd = 0.13)) #the plot between Lateral Position(m) and TrialTime(ms)
#B
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",b) #the plot between Lateral Position(m) and TrialTime(ms)
b <- y*rnorm(20,mean = 0,sd = 0.13)
b <- rnorm(20,mean = 0.0,sd = 0.13)
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b",b) #the plot between Lateral Position(m) and TrialTime(ms)
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = colors)
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = colors(distinct = TRUE))
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "colors")
#Question 2
library(graphics)
library(RColorBrewer)
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
b <- rnorm(20,mean = 0.0,sd = 0.13)
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "blue") #the plot between Lateral Position(m) and TrialTime(ms)
#B
cumsum(y)
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
b <- rnorm(20,mean = 0.0,sd = 0.13)
a <- cumsum(y)
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "blue") #the plot between Lateral Position(m) and TrialTime(ms)
?hist
library(utils)
plot.hist(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "blue") #the plot between Lateral Position(m) and TrialTime(ms)
plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "blue") #the plot between Lateral Position(m) and TrialTime(ms)
hist(a)
?hist
?rnorm
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
library(ggplot2)
qplot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
?for (variable in vector) {sdzscz
czcxzs
#Question 2
library(graphics)
library(utils)
library(RColorBrewer)
library(ggplot2)
#A
#subsetting tableofDriftValues for sorting the data between 15 and 18sec to make a plot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
b <- rnorm(20,mean = 0.0,sd = 0.13)
a <- cumsum(y)
qplot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
a <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "blue") #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, maain = "Histogram fr q2a")
#B
t <-
?sample
a <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:10]) #the plot between Lateral Position(m) and TrialTime(ms)
qplot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13), col = palette()[1:6]))
a <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6]) #the plot between Lateral Position(m) and TrialTime(ms)
?sample
qplot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
?plt
?plot
?qplot
??qplot
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
x <- drift_value_t$trialTime
y <- drift_value_t$posX
b <- rnorm(20,mean = 0.0,sd = 0.13)
a <- cumsum(y)
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
a <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "blue") #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, maain = "Histogram fr q2a")
View(drift_value_t)
hist(a, freq = 20, maain = "Histogram fr q2a")
a <- cumsum(y)
a <- cumsum(y)
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "blue") #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, maain = "Histogram fr q2a")
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = "blue") #the plot between Lateral Position(m) and TrialTime(ms)
?cex
??cex
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = pallete()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = type.palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
view.q2a
view.q2a()
view.q2a()
view.q2a <- function(){
x <- drift_value_t$trialTime
y <- drift_value_t$posX
b <- rnorm(20,mean = 0.0,sd = 0.13)
a <- cumsum(y)
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, maain = "Histogram fr q2a")
}
view.q2a()
view.q2a <- function(){
x <- drift_value_t$trialTime
y <- drift_value_t$posX
b <- rnorm(20,mean = 0.0,sd = 0.13)
a <- cumsum(y)
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, main = "Histogram fr q2a")
}
view.q2a()
?hist
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
view.q2a <- function(){
x <- drift_value_t$trialTime
y <- drift_value_t$posX
b <- rnorm(20,mean = 0.0,sd = 0.13)
a <- cumsum(y)
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, main = paste("Histogram fr q2a"))
}
view.q2a()
drift_value_t <- subset(tableOfDriftValuesCalibration,tableOfDriftValuesCalibration$trialTime > 15000 & tableOfDriftValuesCalibration$trialTime < 18000)
view.q2a <- function(){
x <- drift_value_t$trialTime
y <- drift_value_t$posX
b <- rnorm(20,mean = 0.0,sd = 0.13)
a <- cumsum(y)
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 2.5) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, main = paste("Histogram fr q2a"))
}
view.q2a()
hist(a,t, freq = 20, main = paste("Histogram fr q2a"))
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette(freq))
hist()
?hist
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:20])
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:6])
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 1)
?`function-class`
?function
exit
view.q2a()
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:6])
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.13)))
plot(replicate(20,rnorm(2,mean = 0.0, sd = 0.27)))
plot(replicate(20,rnorm(2,mean = 0.0, sd = 1.27)))
view.q2a()
cumsum(y)
?stats
library(graphics)
library(utils)
library(RColorBrewer)
library(ggplot2)
library(EMCluster)
library(stats)
install.packages(MASS)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
library(graphics)
library(utils)
library(RColorBrewer)
library(ggplot2)
library(EMCluster)
library(stats)
view.q2b()
q2b <- function(){
for (i in 1:20) {
a <- cumsum(y)
m <- mean(y)
plot(m,y,xlab = "mean", ylab = "LAteral deviation")
}
a <- cumsum()[i:y]
exit
q2b <- function(){
for (i in 1:20) {
a <- cumsum()[i:y]
}
view.q2b()
}
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
source('D:/UU AI/Cognitive modelling/Assignment-1/Q2/q2_sol.R')
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "b", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
view.q2b()
q2b()
q2b <- function()
{
for (i in 1:20)
{
a <- cumsum()[i:y]
}
}
a <- cumsum()[i:y]
a <- cumsum(y)
cumsum(y)
cumsum(y)
?rnorm
for (i in 1:20)
{
rnorm(i,mean = 0, sd = 0.13)
cumsum(y)
}
View(q2b)
View(view.q2a)
View(q2b)
rnorm(i,mean = 0, sd = 0.13)
curve(rnorm(i,mean = 0, sd = 0.13))
?curve
curve(expr = rnorm(n = i, mean = 0,sd = 0.13),from = 1,to = 20,xlab = "x axix",ylab = "Y axis")
curve(expr = rnorm(n = i, mean = 0,sd = 0.13),xlab = "x axix",ylab = "Y axis")
?plot
plot( a<- sort(rnorm(i, mean = 0,sd = 0.13)), type = "s" )
plot( a<- sort(rnorm(i, mean = 0,sd = 0.13)), type = "s" )
plot( a<- sort(rnorm(i, mean = 0,sd = 0.13)), type = "s", col = palette()[1:6] )
for (i in 1:50)
{
plot( a<- sort(rnorm(i, mean = 0,sd = 0.13)), type = "s", col = palette()[1:6], cex = 1)
cumsum(y)
}
}
q2b <- function()
{
for (i in 1:50)
{
plot( a<- sort(rnorm(i, mean = 0,sd = 0.13)), type = "s", col = palette()[1:6], cex = 1)
cumsum(y)
}
}
q2b()
?hist
hist(f, freq = FALSE, ylim = c(0, 0.2))
hist(x, freq = FALSE, ylim = c(0, 0.2))
hist(t, freq = FALSE, ylim = c(0, 0.2))
t <- cumsum(y)
?hist
hist(i, freq = FALSE, ylim = c(0, 0.2))
hist(i, freq = TRUE, ylim = c(0, 0.2))
f <- plot( a<- sort(rnorm(i, mean = 0,sd = 0.13)), type = "s", col = palette()[1:6], cex = 1)
f <- plot( a<- sort(rnorm(i, mean = 0,sd = 0.13)), type = "l", col = palette()[1:6], cex = 1)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
?sort
for (j in [1:50])
{
b <- sort(rnorm(j,mean = 0.0,sd = 0.13),decreasing = FALSE)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:6])
}
q2a()
for (j in 1:50)
{
b <- sort(rnorm(j,mean = 0.0,sd = 0.13),decreasing = FALSE)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:6])
}
b <- sort(rnorm(j,mean = 0.0,sd = 0.13),decreasing = FALSE)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:6])
b <- sort(rnorm(j,mean = 0.0,sd = 0.13),decreasing = FALSE)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:6])
b <- sort(rnorm(j,mean = 0.0,sd = 0.13),decreasing = FALSE)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
hist(a, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:6])
hist(b, freq = 20, main = paste("Histogram fr q2a"), col = palette()[1:6])
f <- plot( a<- sort(rnorm(i, mean = 0,sd = 0.13),decreasing = FALSE), type = "l", col = palette()[1:6], cex = 1)
t <- plot(x,y,xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6],cex = 1) #the plot between Lateral Position(m) and TrialTime(ms)
f <- plot( a<- sort(rnorm(i, mean = 0,sd = 0.13),decreasing = FALSE), type = "l", col = palette()[1:6], cex = 1)
f <- plot( a<- sort(rnorm(i, mean = 0,sd = 0.13),xlab = "trialTime(ms)", ylab = "LateralPosition(m)",decreasing = FALSE), type = "l", col = palette()[1:6], cex = 1)
f <- plot( a<- sort(rnorm(i, mean = 0,sd = 0.13),decreasing = FALSE),xlab = "trialTime(ms)", ylab = "LateralPosition(m)",type = "l", col = palette()[1:6], cex = 1)
hist(a,freq = 50,main = paste("Histogram for q2B"), col = palette()[1:6])
hist(b, freq = 50, main = paste("Histogram fr q2a"), col = palette()[1:6])
?hist
View(tableOfDriftValuesCalibration)
View(tableOfDriftValuesCalibration)
no_error_blabla <- subset(no_error, no_error$Event1 == "Correct", no_error$phoneNrLengthAfterKeyPress == 11 ~ no_error$pp == 1)
no_error <- subset(keyPressDataWithLaneDeviation, keyPressDataWithLaneDeviation$typingErrorMadeOnTrial == 0 )
no_error_blabla <- subset(no_error, no_error$Event1 == "Correct", no_error$phoneNrLengthAfterKeyPress == 11 ~ no_error$pp == 1)
no_error_blabla <- subset(no_error, no_error$Event1 = "Correct", no_error$phoneNrLengthAfterKeyPress = 11 ~ no_error$pp = 1)
no_error_blabla <- subset(no_error, no_error$Event1 = "Correct" & no_error$phoneNrLengthAfterKeyPress == 11 & no_error$pp = 1)
no_error_blabla <- subset(no_error, no_error$Event1 = "Correct" && no_error$phoneNrLengthAfterKeyPress == 11 && no_error$pp = 1)
no_error_blabla <- subset(no_error, no_error$Event1 == "Correct" && no_error$phoneNrLengthAfterKeyPress == 11 && no_error$pp = 1)
no_error_blabla <- subset(no_error, no_error$Event1 == "Correct" && no_error$phoneNrLengthAfterKeyPress == 11 && no_error$pp == 1)
View(no_error_blabla)
no_error_blabla <- subset(no_error, no_error$Event1 == "Correct" && no_error$phoneNrLengthAfterKeyPress == 11 && no_error$pp == 1 && no_error$trial==2)
View(no_error)
View(no_error_blabla)
no_error_blabla <- subset(no_error_blabla, no_error$phoneNrLengthAfterKeyPress == 11 && no_error$pp == 1 && no_error$trial==2)
View(no_error_blabla)
no_error_blabla <- subset(no_error_blabla, no_error$phoneNrLengthAfterKeyPress == 11 && no_error$pp == 1)
View(no_error_blabla)
no_error_dual_steer_focus <- subset(no_error, no_error$partOfExperiment == 'dualSteerFocus' )
no_error_dual_dial_focus <- subset(no_error, no_error$partOfExperiment == 'dualDialFocus')
View(no_error_dual_steer_focus)
aggregate_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart ~ pp ,by = list(pp==1), FUN = "mean"))
aggregate_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ pp == 1 ,by = list(pp), FUN = mean))
load("D:/UU AI/Cognitive modelling/Assignment-1/Q2/tableOfDriftValuesCalibration.Rdata")
x <- mean (dial_aggregated2$`time_dial_focus$timeRelativeToTrialStart`) #timemean of time Dial FOcusx'
no_error <- subset(keyPressDataWithLaneDeviation,keyPressDataWithLaneDeviation$typingErrorMadeOnTrial==0)
tot_dial_time <- subset(keyPressDataWithLaneDeviation,keyPressDataWithLaneDeviation$Event1=="Correct")
no_error_dual_steer_focus <- subset(no_error, no_error$partOfExperiment == 'dualSteerFocus' )
no_error_dual_dial_focus <- subset(no_error, no_error$partOfExperiment == 'dualDialFocus' )
time_steer_focus <- subset(no_error_dual_steer_focus, no_error_dual_steer_focus$phoneNrLengthAfterKeyPress == 11)
time_dial_focus <- subset(no_error_dual_dial_focus, no_error_dual_dial_focus$phoneNrLengthAfterKeyPress == 11)
aggregate_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ pp == 1 ,by = list(pp), FUN = mean))
exit
?with
aggregate_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ pp == 1 ,by = list(pp), FUN = mean)))
?list
aggregate_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ pp == 1, FUN = "mean")))
aggregate_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ pp = 1, FUN = "mean")))
ag_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ pp == 1, FUN = "mean")))
ag_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ list(pp == 1), FUN = "mean")))
View(no_error)
ag_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ list(pp == 1), FUN = "mean")))
ag_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ is.list(pp == 1), FUN = "mean")))
ag_steer_focus1 <- with(data = time_steer_focus,aggregate.data.frame(time_dial_focus$pp == 1), FUN = "mean")
ag_steer_focus1 <- with(data = time_steer_focus,aggregate.data.frame(time_dial_focus$pp == 1), FUN = "mean")
?with
ag_steer_focus1 <- with(data = time_steer_focus,aggregate.data.frame(time_dial_focus$pp == 1))
ag_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart == 11 ~ list(pp == 1),mean)))
ag_steer_focus <- with(time_steer_focus(aggregate(timeRelativeToTrialStart ~ list(pp == 1),mean)))
ag_steer_focus <- with(time_steer_focus, aggregate(timeRelativeToTrialStart ~ pp, time_steer_focus, mean))
View(ag_steer_focus)
?variance
??varianc
??variance
ag_steer_focus <- with(time_steer_focus, aggregate(timeRelativeToTrialStart ~ pp==1, time_steer_focus, mean))
View(ag_steer_focus)
View(ag_steer_focus)
ag_steer_focus <- with(time_steer_focus, aggregate(timeRelativeToTrialStart ~ pp, time_steer_focus, mean))
View(ag_steer_focus)
ag_steer_focus_standdev <- with(time_steer_focus, aggregate(timeRelativeToTrialStart ~ pp, time_steer_focus, sd))
ag_steer_focus_mean <- with(time_steer_focus, aggregate(timeRelativeToTrialStart ~ pp, time_steer_focus, mean))
ag_steer_focus_standdev <- with(time_steer_focus, aggregate(timeRelativeToTrialStart ~ pp, time_steer_focus, sd))
ag_steer_focus_mean <- with(time_steer_focus, aggregate(timeRelativeToTrialStart ~ pp, time_steer_focus, mean))
ag_steer_focus_standdev <- with(time_steer_focus, aggregate(timeRelativeToTrialStart ~ pp, time_steer_focus, sd))
se <- function(x) {sqrt(ag_steer_focus_mean/ag_steer_focus_standdev}
?sqrt
se <- sqrt(ag_steer_focus_mean/ag_steer_focus_standdev)
standard_error <- sqrt(ag_steer_focus_mean/ag_steer_focus_standdev)
View(standard_error)
ag_dial_focus_mean <- with(time_dial_focus, aggregate(timeRelativeToTrialStart ~ pp, time_steer_focus, mean))
View(ag_dial_focus_mean)
ag_dial_focus_mean <- with(time_dial_focus, aggregate(timeRelativeToTrialStart ~ pp, time_dial_focus, mean))
ag_dial_focus_standdev <- with(time_dial_focus, aggregate(timeRelativeToTrialStart ~ pp, time_dial_focus, sd))
View(ag_dial_focus_mean)
View(ag_dial_focus_standdev)
View(ag_dial_focus_standdev)
standard_error_dialFocus <- sqrt(ag_steer_focus_mean/ag_steer_focus_standdev)
standard_error_dialFocus <- sqrt(ag_dial_focus_mean/ag_dial_focus_standdev)
View(standard_error_dialFocus)
